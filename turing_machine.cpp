//--------------------------------------------------------------------
// Институт компьютерных технологий и информационной безопасности ЮФУ
// Кафедра МОП ЭВМ
// Программирование и основы теории алгоритмов
// Проектирование и реализация Машины Тьюринга
// 07.05.2022
//--------------------------------------------------------------------
#include <iomanip>
#include <iostream>
#include <string>
using namespace std;

//--------------------------------------------------------------------
// функция проверки введённого четверичного числа на корректность
// на вход подаётся строка, введённая пользователем
// возвращает false, если в строке присутствуют недопустимые символы
// возвращает true, если строка корректна
//--------------------------------------------------------------------
bool correct(string str)
{
    bool t = true;

    for (int i = 0; i < str.length(); i++)
    {
        if (str.at(i) != '0')
        {
            if (str.at(i) != '1')
            {
                if (str.at(i) != '2')
                {
                    if (str.at(i) != '3')
                    {
                        if (str.at(i) != '_')
                        {
                            t = false;
                        }
                    }
                }
            }
        }
    }

    return t;

}

//--------------------------------------------------------------------
// набор алфавита с дополнительными символами
//--------------------------------------------------------------------
char mas[8] = { '0',   '1',    '2',    '3',   '#',   'S',   '_' };

//--------------------------------------------------------------------
// таблица переходов
// нулевая строка - набор алфавита
// восьмая колонка - состояния
// пересечение строк и столбцов - команды перехода
//--------------------------------------------------------------------
string TBL[14][8] =
{
    { "0",   "1",   "2",   "3",   "#",   "S",   "_",  " "},
    {"0>A", "1>A", "2>A", "3>A", "   ", "   ", "#<B", "A"},
    {"0<D", "0>C", "1>C", "2>C", "#>C", "   ", "   ", "B"},
    {"0>C", "1>C", "2>C", "3>C", "#>C", "S>C", "S<F", "C"},
    {"0<D", "0>E", "1>E", "2>E", "   ", "   ", "_>G", "D"},
    {"3>E", "   ", "   ", "   ", "#>C", "   ", "   ", "E"},
    {"0<F", "1<F", "2<F", "3<F", "#<B", "S<F", "   ", "F"},
    {"_>G", "1>G", "2>G", "3>G", "#>G", "S>G", "S.H", "G"},
    {"   ", "   ", "   ", "   ", "#<M", "1<I", "   ", "H"},
    {"0<I", "1<I", "2<I", "3<I", "#<J", "S<I", "   ", "I"},
    {"1>K", "2>K", "3>K", "0<L", "   ", "   ", "0>K", "J"},
    {"0>K", "1<H", "2>K", "3>K", "#>K", "S>K", "_<H", "K"},
    {"1>K", "2>K", "3>K", "0<L", "   ", "   ", "1>K", "L"},
    {"0<M", "1<M", "2<M", "3<M", "#<M", "S<M", "_>N", "M"}
};

//--------------------------------------------------------------------
// структура хранения таблицы переходов
//--------------------------------------------------------------------
struct Table
{
    string table[14][8];
};

//--------------------------------------------------------------------
// функция реализации шага работы
// на вход подаются: лента, позиция указателя, состояние
// проходит циклом по таблице переходов меняя состояние, позицию 
// указателя и текущий символ на ленте
//--------------------------------------------------------------------
void analyze(string& str, int& pos, string& state, string& uk)
{
    for (int i = 0; i < 14; i++)
    {
        for (int j = 0; j < 8; j++)
        {
            if (TBL[i][7] == state && str.at(pos) == mas[j])
            {
                str.at(pos) = TBL[i][j][0];

                state = TBL[i][j][2];

                pos += TBL[i][j][1] == '>' ? 1 : TBL[i][j][1] == '<' ? -1 : 0;

                pos >= str.length() ? str += "_" : "";

                cout << str << ' ' << state << endl << setw(pos + 1) << right << uk << endl;
            }
        }
    }
}

int main()
{
    string str, strres, uk = "^";

    setlocale(0, "rus");

    int start = 1;

    while (true)
    {
        if (start == 1)
        {
            cout << "Введите входное слово: " << endl;
            start++;
        }
        else
        {
            cout << "Введите входное слово, или 'exit' для выхода из программы: " << endl;
        }

        cin >> strres;

        str = "_" + strres + "_";

        if (str == "_exit_")
        {
            return 0;
        }

        else if (correct(str))
        {
            string state = "A";

            int len = str.length();
            int pos = 1;

            for (int i = 0; state != "N"; i++)
            {
                analyze(str, pos, state, uk);
            }
        }

        else
        {
            cout << endl << "Введённое слово некорректно!" << endl;
        }
    }

    return 0;
}
